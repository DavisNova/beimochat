name: Build iOS IPA

on:
  push:
    branches: [ photo-management, main ]
  pull_request:
    branches: [ photo-management, main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build_ios:
    name: Build iOS IPA
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        cache: false  # 禁用缓存，强制使用新版本
    
    - name: Verify Flutter version
      run: flutter --version
    
    - name: Install Flutter dependencies
      run: flutter pub get
    
    - name: Analyze Flutter code
      run: flutter analyze
      continue-on-error: true
    
    - name: Setup iOS dependencies
      run: |
        cd ios
        pod install
        cd ..
    
    - name: Fix script permissions
      run: |
        echo "修复所有.sh脚本权限..."
        find ios/Pods -type f -name "*.sh" -exec chmod +x {} \;
        echo "特别修复WebRTC-SDK脚本..."
        if [ -f "ios/Pods/Target Support Files/WebRTC-SDK/WebRTC-SDK-xcframeworks.sh" ]; then
          chmod +x "ios/Pods/Target Support Files/WebRTC-SDK/WebRTC-SDK-xcframeworks.sh"
          ls -la "ios/Pods/Target Support Files/WebRTC-SDK/WebRTC-SDK-xcframeworks.sh"
        fi
        echo "修复所有Target Support Files中的脚本..."
        find "ios/Pods/Target Support Files" -name "*.sh" -exec chmod +x {} \;
        echo "验证权限修复结果..."
        find ios/Pods -type f -name "*.sh" -exec ls -la {} \;
    
    - name: Clean Flutter build
      run: flutter clean
    
    - name: Build iOS Debug (No Code Sign)
      run: flutter build ios --debug --no-codesign
    
    - name: Create IPA from iOS build
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r ../../../Runner-Debug.ipa Payload/
        cd ../../..
    
    - name: Build iOS Release (No Code Sign)
      run: flutter build ios --release --no-codesign
      continue-on-error: true
    
    - name: Create Release IPA from iOS build
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r ../../../Runner-Release.ipa Payload/
        cd ../../..
      continue-on-error: true
    
    - name: Upload Debug IPA
      uses: actions/upload-artifact@v4
      with:
        name: iOS-Debug-IPA
        path: Runner-Debug.ipa
        retention-days: 30
    
    - name: Upload Release IPA
      uses: actions/upload-artifact@v4
      with:
        name: iOS-Release-IPA
        path: Runner-Release.ipa
        retention-days: 30
      continue-on-error: true
    
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: iOS-Build-Logs
        path: |
          build/ios/
          ios/Pods/
        retention-days: 7
